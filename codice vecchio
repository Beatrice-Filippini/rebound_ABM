
to discount
  ask products with [ p-residual-life <= (threshold-1 * p-shelf-life)]
  [
    set p-price 0.9 * p-price
    ;CHECK when acceptance will be implemented, then it should be decreased here
  ]
end





;       create-products 1 [
;         set xcor random-xcor
;         set ycor random-ycor
;         set shape "box"
;         set color orange
;         set p-ID item 0 row
;         set p-name item 1 row
;         set p-price item 2 row
;         set p-sustainability item 3 row
;         set p-quality item 4 row
;         set p-acceptance item 5 row
;         set p-shelf-life item 6 row
;         set p-residual-life item 7 row
;         set p-production-cost item 8 row
;         set owner-ID item 9 row
;         set p-amount item 10 row
;         set p-price-min item 11 row
;         set p-price-max item 12 row
;         set p-sustainability-min item 13 row
;         set p-sustainability-max item 14 row
;         set p-quality-min item 15 row
;         set p-quality-max item 16 row
;         set p-acceptance-min item 17 row
;         set p-acceptance-max item 18 row
;         set p-shelf-life-min item 19 row
;         set p-shelf-life-max item 20 row
;         set p-residual-life-min item 21 row
;         set p-residual-life-max item 22 row
;         set p-utility 0
;      ]


print ( list "*************" who "*************" )
print list "min" item i p-price-min
print list "max" item i p-price-max
print list "price" [ c-price ] of my-company
print p-price



;to reprocess
;  let num-rows length  m1
;  let num-columns length first m1
; ;print (word "numero righe: " num-rows word " numero colonne: " num-columns)
;
;  let i 1 ;righe
;  let j 0 ;colonne
;          ;NB: per chiamare l'elemento i,j devo scrivere "item j item i m1"
;
;  while [ i < num-rows ]
;  [
;    let p-name-in-matrix item j item i m1
;
;
;    ask products with [p-name = p-name-in-matrix and p-residual-life <= (threshold-2 * p-shelf-life)]
;      [
;          set j j + 1 ;j=1
;
;          let p-waste item j item i m1
;          print ( word "p-waste" p-waste )
;
;          if (p-waste > 0)
;          [
;          hatch 1
;            [
;              ;esempio waste
;              set p-name "waste"
;              set p-ID "w"
;              set p-amount-w p-amount * p-waste
;              set p-residual-life 0
;              set p-price 0
;              ;introdurre costo di smaltimento
;              set p-sustainability 0; fix
;            ]
;          ;set p-amount p-amount - p-amount-w      ;CHECK dopo qualche iterazione
;          ];fine if p-waste
;
;        while [j > 1 and j < num-columns]
;        [
;          set j j + 1 ;j=2
;          let cell-text item j item i m1
;          let numeric-part read-from-string (first (word cell-text "_"))
;          let text-part last (word cell-text "_")
;
;          if (numeric-part > 0)
;          [
;            if (text-part = "hvr")
;               [
;                  let p-hvr numeric-part
;                  hatch 1
;                  [
;                    ;Reprocess example: fruit and vegetables
;                    set p-name "higher value reprocess"
;                    set p-ID "hvr"
;                    set p-amount-hvr p-amount * p-hvr
;                    set p-residual-life (1.1 * p-residual-life)     ;fix
;                    set p-price (1.1 * p-price)                     ;fix
;                    set p-sustainability 1.1 * p-sustainability     ;fix
;                  ]
;                  ;print (word "p-amount: " p-amount " p-amount-hvr: " p-amount-hvr " p-hvr: " p-hvr)
;                  ;set p-amount p-amount - p-amount-hvr
;               ]
;
;            if (text-part = "svr")
;               [
;                  let p-svr numeric-part
;                  hatch 1
;                  [
;                    ;esempio pollo-> pollo congelato
;                    set p-name "same value reprocess"
;                    set p-ID "svr"
;                    set p-amount-svr p-amount * p-svr
;                    set p-residual-life (1.1 * p-residual-life)     ;fix
;                    set p-sustainability (1.1 * p-sustainability)   ; fix
;                  ]
;                  ;set p-amount p-amount - p-amount-svr
;               ]
;
;            if (text-part = "lvr")
;               [
;                  let p-lvr numeric-part
;                  hatch 1
;                  [
;                    ;esempio pasta -> pasta con semola rimacinata
;                    set p-name "lower value reprocess"
;                    set p-ID "lvr"
;                    set p-amount-lvr p-amount * p-lvr
;                    set p-residual-life (1.1 * p-residual-life)     ;fix
;                    set p-price 0.9 * p-price                       ;fix
;                    set p-sustainability (1.1 * p-sustainability)   ;fix
;                  ]
;                  ;set p-amount p-amount - p-amount-lvr
;               ]
;          ]; end of if (numeric-part>0)
;      ]; end of second while
;
;        set p-amount ( p-amount - p-amount-w - p-amount-hvr - p-amount-svr - p-amount-lvr)
;
;    ]; end of ask product
;    set p-amount-w 0
;    set p-amount-hvr 0
;    set p-amount-svr 0
;    set p-amount-lvr 0
;    set i i + 1
;    set j 0
;  ]
;
;end